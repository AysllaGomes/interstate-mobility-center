{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ettore\\\\Desktop\\\\TCC\\\\teste\\\\interstate-mobility-center\\\\cmi-app-cli\\\\src\\\\login\\\\Login.tsx\";\n\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Card, TextInput } from \"react-native-paper\";\nimport { loginStyle } from \"./login.style\";\nimport { useValidation } from 'react-native-form-validator';\n\nvar Login = function Login(props) {\n  var logar = function logar() {\n    return props.navigation.navigate(\"Home\");\n  };\n\n  var register = function register() {\n    return props.navigation.navigate(\"Register\");\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorEmail = _useState6[0],\n      setErrorEmail = _useState6[1];\n\n  var _useValidation = useValidation({\n    state: {\n      email: email,\n      password: password\n    }\n  }),\n      validate = _useValidation.validate,\n      isFieldInError = _useValidation.isFieldInError,\n      getErrorsInField = _useValidation.getErrorsInField,\n      getErrorMessages = _useValidation.getErrorMessages;\n\n  var validar = function validar() {\n    validate({\n      email: {\n        email: true\n      },\n      password: {}\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: loginStyle.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: loginStyle.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, React.createElement(Card.Title, {\n    title: \"Mobility Center\",\n    titleStyle: loginStyle.cardTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }), React.createElement(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    label: \"User\",\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(value) {\n      return value;\n    },\n    value: email,\n    error: errorEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }), React.createElement(Button, {\n    uppercase: false,\n    style: loginStyle.cardButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"Esqueceu email/password?\"), React.createElement(Button, {\n    onPress: validar,\n    mode: \"contained\",\n    style: loginStyle.cardButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"Login\"), React.createElement(Button, {\n    onPress: register,\n    style: loginStyle.cardButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Register\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Ettore/Desktop/TCC/teste/interstate-mobility-center/cmi-app-cli/src/login/Login.tsx"],"names":["React","useState","Button","Card","TextInput","loginStyle","useValidation","Login","props","logar","navigation","navigate","register","email","setEmail","password","setPassword","errorEmail","setErrorEmail","state","validate","isFieldInError","getErrorsInField","getErrorMessages","validar","content","view","cardTitle","value","cardButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,oBAAtC;AACA,SAAQC,UAAR;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAA6B;AAEvC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,MAA1B,CAAN;AAAA,GAAd;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMJ,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,UAA1B,CAAN;AAAA,GAAjB;;AAEA,kBAA0BV,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCb,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,mBAAoCf,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOgB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,uBACIZ,aAAa,CAAC;AACVa,IAAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,QAAQ,EAARA;AAAT;AADG,GAAD,CADjB;AAAA,MAAQK,QAAR,kBAAQA,QAAR;AAAA,MAAkBC,cAAlB,kBAAkBA,cAAlB;AAAA,MAAkCC,gBAAlC,kBAAkCA,gBAAlC;AAAA,MAAoDC,gBAApD,kBAAoDA,gBAApD;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBJ,IAAAA,QAAQ,CAAC;AACLP,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OADF;AAELE,MAAAA,QAAQ,EAAE;AAFL,KAAD,CAAR;AAIH,GALD;;AAQA,SACY,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,UAAU,CAACoB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,UAAU,CAACqB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAC,iBAAlB;AAAoC,IAAA,UAAU,EAAErB,UAAU,CAACsB,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,YAAY,EAAC,eAHjB;AAII,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAKA,KAAL;AAAA,KAJvB;AAKI,IAAA,KAAK,EAAEf,KALX;AAMI,IAAA,KAAK,EAAEI,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,eAAe,EAAE,IAFrB;AAGI,IAAA,YAAY,EAAE,sBAAAW,KAAK;AAAA,aAAIZ,WAAW,CAACY,KAAD,CAAf;AAAA,KAHvB;AAII,IAAA,KAAK,EAAEb,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAgBI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,KAAnB;AAA0B,IAAA,KAAK,EAAEV,UAAU,CAACwB,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAhBJ,EAiBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,OAAjB;AAA0B,IAAA,IAAI,EAAC,WAA/B;AAA2C,IAAA,KAAK,EAAEnB,UAAU,CAACwB,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,EAkBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEjB,QAAjB;AAA2B,IAAA,KAAK,EAAEP,UAAU,CAACwB,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,CAFJ,CADJ,CADJ,CADZ;AA6BH,CApDD;;AAsDA,eAAetB,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Alert, SafeAreaView, View} from \"react-native\";\r\nimport {Button, Card, TextInput} from \"react-native-paper\";\r\nimport {loginStyle} from \"./login.style\";\r\nimport { useValidation } from 'react-native-form-validator';\r\ninterface LoginScreenProps {\r\n    navigation: any;\r\n}\r\n\r\n\r\n\r\n\r\nconst Login = (props: LoginScreenProps) => {\r\n\r\n    const logar = () => props.navigation.navigate(\"Home\")\r\n    const register = () => props.navigation.navigate(\"Register\")\r\n\r\n    const [email, setEmail] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n\r\n    const [errorEmail, setErrorEmail] = useState(null)\r\n\r\n    const { validate, isFieldInError, getErrorsInField, getErrorMessages } =\r\n        useValidation({\r\n            state: { email, password },\r\n        });\r\n\r\n    const validar = () => {\r\n        validate({\r\n            email: { email: true },\r\n            password: {}\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n                <SafeAreaView style={loginStyle.content}>\r\n                    <View style={loginStyle.view}>\r\n                        <Card>\r\n                            <Card.Title title=\"Mobility Center\" titleStyle={loginStyle.cardTitle}></Card.Title>\r\n                            <Card.Content>\r\n                                <TextInput\r\n                                    placeholder=\"Email\"\r\n                                    label=\"User\"\r\n                                    keyboardType=\"email-address\"\r\n                                    onChangeText={value => (value)}\r\n                                    value={email}\r\n                                    error={errorEmail}\r\n\r\n                                />\r\n                                <TextInput\r\n                                    label=\"Password\"\r\n                                    secureTextEntry={true}\r\n                                    onChangeText={value => setPassword(value)}\r\n                                    value={password}\r\n                                />\r\n                                <Button uppercase={false} style={loginStyle.cardButton}>Esqueceu email/password?</Button>\r\n                                <Button onPress={validar} mode=\"contained\" style={loginStyle.cardButton}>Login</Button>\r\n                                <Button onPress={register} style={loginStyle.cardButton}>Register</Button>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </View>\r\n                </SafeAreaView>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}